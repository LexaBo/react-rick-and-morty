{"version":3,"file":"static/js/502.6cca2719.chunk.js","mappings":"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","sources":["components/loader/Loader.js","components/nothing-found/NothingFound.tsx","components/filters/Filters.tsx","components/characters-item/CharactersItem.tsx","components/characters-grid/CharactersGrid.tsx","components/pages/main-page/MainPage.tsx","hooks/redux.ts"],"sourcesContent":["import \"./loader.scss\";\n\nimport React from \"react\";\n\nfunction Loader() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"200\"\n      height=\"200\"\n      display=\"block\"\n      preserveAspectRatio=\"xMidYMid\"\n      viewBox=\"0 0 100 100\"\n      className=\"loader\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"35\"\n        fill=\"none\"\n        stroke=\"#00b6cd\"\n        strokeDasharray=\"164.93361431346415 56.97787143782138\"\n        strokeWidth=\"10\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"1s\"\n          keyTimes=\"0;1\"\n          repeatCount=\"indefinite\"\n          type=\"rotate\"\n          values=\"0 50 50;360 50 50\"\n        ></animateTransform>\n      </circle>\n    </svg>\n  );\n}\n\nexport default Loader;","import \"./nothing-found.scss\";\n\nconst NothingFound = () => {\n    return <h5 className=\"nothing-found-title\">Nothing found</h5>\n}\n\nexport default NothingFound;","import \"./filters.scss\";\n\nimport {Formik, Field, Form, FormikHelpers} from \"formik\";\nimport {setFiltersName, setFiltersStatus, setFiltersGender} from \"./filtersSlice\";\nimport {setCharactersPageNum} from \"../characters-grid/charactersSlice\"\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\n\ninterface Values {\n    name: string;\n    status: string;\n    gender: string;\n}\n\nconst Filters = () => {\n    const dispatch = useAppDispatch();\n    const nameFilter = useAppSelector((state) => state.filters.filtersName);\n    const filtersStatus = useAppSelector((state) => state.filters.filtersStatus);\n    const filtersGender = useAppSelector((state) => state.filters.filtersGender);\n\n    return (\n        <Formik\n            initialValues={{\n                name: nameFilter,\n                status: filtersStatus,\n                gender: filtersGender,\n            }}\n            onSubmit={(\n                values: Values,\n                {setSubmitting}: FormikHelpers<Values>\n            ) => {\n                setSubmitting(false);\n                dispatch(setFiltersName(values.name));\n                dispatch(setFiltersStatus(values.status));\n                dispatch(setFiltersGender(values.gender));\n                dispatch(setCharactersPageNum(1));\n            }}\n        >\n            <Form className=\"filters-form\">\n                <label className=\"filters-form__label\" htmlFor=\"characterName\">name</label>\n                <Field className=\"filters-form__field filters-form__field_text\" id=\"characterName\" name=\"name\"/>\n                <label className=\"filters-form__label\" htmlFor=\"characterStatus\">status</label>\n                <Field className=\"filters-form__field\" id=\"characterStatus\" as=\"select\" name=\"status\">\n                    <option value=\"\">all</option>\n                    <option value=\"alive\">alive</option>\n                    <option value=\"dead\">dead</option>\n                    <option value=\"unknown\">unknown</option>\n                </Field>\n                <label className=\"filters-form__label\" htmlFor=\"characterGender\">gender</label>\n                <Field className=\"filters-form__field\" id=\"characterGender\" as=\"select\" name=\"gender\">\n                    <option value=\"\">all</option>\n                    <option value=\"female\">female</option>\n                    <option value=\"male\">male</option>\n                    <option value=\"genderless\">genderless</option>\n                    <option value=\"unknown\">unknown</option>\n                </Field>\n                <button className=\"filters-form__btn\" type=\"submit\">Search</button>\n            </Form>\n        </Formik>\n    );\n}\n\nexport default Filters;","import \"./characters-item.scss\";\n\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\ninterface itemInfo {\n    name: string,\n    image: string,\n    id: string,\n}\n\nconst CharacterListItem = ({name, image, id}: itemInfo) => {\n    const link = `character/${id}`;\n\n    return (\n        <li\n            className=\"character-item\">\n            <Link to={link} relative=\"path\" className=\"character-item__link\">\n                <div className=\"character-item__image-wr\">\n                    <LazyLoadImage\n                        alt=\"character\"\n                        className=\"character-item__image\"\n                        src={image}\n                        effect=\"blur\"\n                    />\n                </div>\n                <div className=\"character-item__text-container\">\n                    <h3 className=\"character-item__name\">{name}</h3>\n                </div>\n            </Link>\n        </li>\n    )\n}\n\nexport default CharacterListItem;","import \"./characters-grid.scss\";\nimport \"../../style/pagination.scss\";\n\nimport {useEffect} from \"react\";\nimport CharactersItem from \"../characters-item/CharactersItem\";\nimport NothingFound from \"../nothing-found/NothingFound\";\nimport Loader from \"../loader/Loader\";\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport Pagination from \"react-js-pagination\";\nimport {fetchCharacters, setCharactersPageNum} from \"./charactersSlice\";\nimport {ItemCharacters} from \"../../type/characters\";\n\n\nconst CharactersGrid = () => {\n    const elements = useAppSelector((state) => state.characters.characters)\n    const activePageNumber = useAppSelector((state) => state.characters.activePageNumber)\n    const charactersLoadingStatus = useAppSelector(state => state.characters.charactersLoadingStatus);\n    const totalItems =  useAppSelector((state) => state.characters.totalItems);\n    const itemPerPage = useAppSelector((state) => state.characters.itemPerPage);\n    const filterName = useAppSelector((state) => state.filters.filtersName);\n    const filtersStatus = useAppSelector((state) => state.filters.filtersStatus);\n    const filtersGender = useAppSelector((state) => state.filters.filtersGender);\n    const dispatch = useAppDispatch();\n    let content;\n\n    useEffect(() => {\n        dispatch(fetchCharacters({activePageNumber, filterName, filtersStatus, filtersGender}));\n    }, [activePageNumber, filterName, filtersStatus, filtersGender]);\n\n    const renderCharactersList = (arr: Array<ItemCharacters>) => {\n        if (arr.length === 0) {\n            return (\n                <NothingFound />\n            )\n        }\n\n        return arr.map((item) => {\n           const arrInfo = {\n               name: item.name,\n               image: item.image,\n               id: item.id\n            }\n\n            return (\n                <CharactersItem key={item.id} {...arrInfo}/>\n            )\n        });\n    }\n\n   const handlePageChange = (pageNumber: number) => {\n       dispatch(setCharactersPageNum(pageNumber));\n    }\n\n    if (charactersLoadingStatus === \"error\") {\n        content = <NothingFound/>\n    } else {\n        content = (\n            <ul className=\"characters-list\">\n                {renderCharactersList(elements)}\n            </ul>\n        )\n    }\n\n    return (\n        <>\n            {content}\n            {charactersLoadingStatus === \"error\" ?\n               \"\" :\n                <Pagination\n                    itemClass=\"page-item\"\n                    linkClass=\"page-link\"\n                    hideNavigation={true}\n                    activePage={activePageNumber}\n                    itemsCountPerPage={itemPerPage}\n                    totalItemsCount={totalItems}\n                    pageRangeDisplayed={5}\n                    onChange={handlePageChange}\n                />\n            }\n            {charactersLoadingStatus === \"loading\" ? <Loader/> : \"\"}\n        </>\n    )\n}\n\nexport default CharactersGrid;","import \"./main-page.scss\";\n\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\nimport React from \"react\";\n\nimport Filters from \"../../filters/Filters\";\nimport CharactersGrid from \"../../characters-grid/CharactersGrid\";\n\nexport default function MainPage() {\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <meta\n                    name=\"main\"\n                    content=\"Rick and Morty information\"\n                />\n                <title>Rick and Morty</title>\n            </Helmet>\n            <div className=\"main-page\">\n                <div className=\"main-page__columns\">\n                    <div className=\"main-page__column\">\n                        <Filters/>\n                    </div>\n                    <div className=\"main-page__column\">\n                        <CharactersGrid/>\n                    </div>\n                </div>\n            </div>\n        </HelmetProvider>\n    );\n}","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"names":["xmlns","width","height","display","preserveAspectRatio","viewBox","className","cx","cy","r","fill","stroke","strokeDasharray","strokeWidth","attributeName","dur","keyTimes","repeatCount","type","values","dispatch","useAppDispatch","nameFilter","useAppSelector","state","filters","filtersName","filtersStatus","filtersGender","initialValues","name","status","gender","onSubmit","setSubmitting","setFiltersName","setFiltersStatus","setFiltersGender","setCharactersPageNum","htmlFor","id","as","value","image","link","to","relative","LazyLoadImage","alt","src","effect","content","elements","characters","activePageNumber","charactersLoadingStatus","totalItems","itemPerPage","filterName","useEffect","fetchCharacters","arr","NothingFound","length","map","item","arrInfo","CharactersItem","Pagination","itemClass","linkClass","hideNavigation","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","Loader","MainPage","useDispatch","useSelector"],"sourceRoot":""}